/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TestUSDC, TestUSDCInterface } from "../../contracts/TestUSDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initialRecipient",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000b7b38038062000b7b83398101604081905262000034916200022b565b6040518060400160405280600d81526020016c2a32b9ba102aa9a21021b7b4b760991b815250604051806040016040528060048152602001635553444360e01b815250816003908162000088919062000328565b50600462000097828262000328565b50505060ff8316608052620000ad8183620000b6565b5050506200041c565b6001600160a01b038216620000e65760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000f460008383620000f8565b5050565b6001600160a01b038316620001275780600260008282546200011b9190620003f4565b909155506200019b9050565b6001600160a01b038316600090815260208190526040902054818110156200017c5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000dd565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001b957600280548290039055620001d8565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021e91815260200190565b60405180910390a3505050565b6000806000606084860312156200024157600080fd5b835160ff811681146200025357600080fd5b6020850151604086015191945092506001600160a01b03811681146200027857600080fd5b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002ae57607f821691505b602082108103620002cf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032357600081815260208120601f850160051c81016020861015620002fe5750805b601f850160051c820191505b818110156200031f578281556001016200030a565b5050505b505050565b81516001600160401b0381111562000344576200034462000283565b6200035c8162000355845462000299565b84620002d5565b602080601f8311600181146200039457600084156200037b5750858301515b600019600386901b1c1916600185901b1785556200031f565b600085815260208120601f198616915b82811015620003c557888601518255948401946001909101908401620003a4565b5085821015620003e45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200041657634e487b7160e01b600052601160045260246000fd5b92915050565b60805161074362000438600039600061010501526107436000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461012f57806395d89b4114610158578063a9059cbb14610160578063dd62ed3e1461017357600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a06101ac565b6040516100ad919061058d565b60405180910390f35b6100c96100c43660046105f7565b61023e565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f9366004610621565b610258565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100ad565b6100dd61013d36600461065d565b6001600160a01b031660009081526020819052604090205490565b6100a061027c565b6100c961016e3660046105f7565b61028b565b6100dd61018136600461067f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101bb906106b2565b80601f01602080910402602001604051908101604052809291908181526020018280546101e7906106b2565b80156102345780601f1061020957610100808354040283529160200191610234565b820191906000526020600020905b81548152906001019060200180831161021757829003601f168201915b5050505050905090565b60003361024c818585610299565b60019150505b92915050565b6000336102668582856102ab565b61027185858561032f565b506001949350505050565b6060600480546101bb906106b2565b60003361024c81858561032f565b6102a6838383600161038e565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610329578181101561031a57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103298484848403600061038e565b50505050565b6001600160a01b03831661035957604051634b637e8f60e11b815260006004820152602401610311565b6001600160a01b0382166103835760405163ec442f0560e01b815260006004820152602401610311565b6102a6838383610463565b6001600160a01b0384166103b85760405163e602df0560e01b815260006004820152602401610311565b6001600160a01b0383166103e257604051634a1406b160e11b815260006004820152602401610311565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561032957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161045591815260200190565b60405180910390a350505050565b6001600160a01b03831661048e57806002600082825461048391906106ec565b909155506105009050565b6001600160a01b038316600090815260208190526040902054818110156104e15760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610311565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661051c5760028054829003905561053b565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161058091815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105ba5785810183015185820160400152820161059e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105f257600080fd5b919050565b6000806040838503121561060a57600080fd5b610613836105db565b946020939093013593505050565b60008060006060848603121561063657600080fd5b61063f846105db565b925061064d602085016105db565b9150604084013590509250925092565b60006020828403121561066f57600080fd5b610678826105db565b9392505050565b6000806040838503121561069257600080fd5b61069b836105db565b91506106a9602084016105db565b90509250929050565b600181811c908216806106c657607f821691505b6020821081036106e657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025257634e487b7160e01b600052601160045260246000fdfea26469706673582212208b6fb604d0caf7f410747db0450ee91a6e4c56bc25e6c94b1936e26cc31c978364736f6c63430008140033";

type TestUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUSDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUSDC__factory extends ContractFactory {
  constructor(...args: TestUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    initialRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      decimals_,
      initialSupply,
      initialRecipient,
      overrides || {}
    );
  }
  override deploy(
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    initialRecipient: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      decimals_,
      initialSupply,
      initialRecipient,
      overrides || {}
    ) as Promise<
      TestUSDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestUSDC__factory {
    return super.connect(runner) as TestUSDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUSDCInterface {
    return new Interface(_abi) as TestUSDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestUSDC {
    return new Contract(address, _abi, runner) as unknown as TestUSDC;
  }
}
